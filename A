getgenv().Players = game:GetService'Players'
getgenv().Client = Players.LocalPlayer
getgenv().UserInputService = game:GetService'UserInputService'
getgenv().RunService = game:GetService'RunService'
getgenv().Mouse = Client:GetMouse()
getgenv().UserNotifications = function(title, text, time) game.StarterGui:SetCore("SendNotification", {Title = title; Text = text; Duration = time;}) end
getgenv().CoreGui = game:GetService'CoreGui'
getgenv().ScriptColour = Color3.fromRGB(170,0,255)

-- | Booleans | --

local Aimlock = false;

-- | Nils | --

local AimlockTarget;
local AimlockPart;

-- | Hotkeys | --

local AimlockToggle = 'R'
local AimlockVelocityUp = 'L'
local AimlockVelocityDown = 'K'
local AimlockHeadKey = 'I'
local AimlockTorsoKey = 'O'
local AimlockHumanoidRootPartKey = 'P'
local LockOnPlayer = 'E'

-- | Method | --

local AimlockVelocity = 0.17
local AimlockSetting = 'Prediction'

-- | Tables | --

local AbledParts = {
    ['Head'] = 'Head';
    ['Torso'] = 'Torso';
    ['HumanoidRootPart'] = 'HumanoidRootPart';
}

-- | Gui | --

local MainFrame = Instance.new('ScreenGui')
MainFrame.Parent = Client:WaitForChild('PlayerGui')
MainFrame.Enum.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
MainFrame.ResetOnDeath = false

local Text = Instance.new('TextLabel')
Text.Name = 'Display'
Text.Parent = MainFrame
Text.BackgroundTransparency = 1
Text.Size = UDim2.new(0.75, 0, 0.75, 0)
Text.Position = Vector3.new(0, 132, 0, 50)
Text.Font = Enum.Font.Code
Text.TextColor3 = ScriptColour
Text.Text = 'Aimlocked Player: '..tostring(AimlockTarget.DisplayName)
Text.TextSize = 13

-- | Function | --

local function API()
    if Drawing == nil then
        UserNotifications('Erorr', 'Your executor is not compatible for FovCircle')
    else
        return nil
    end
end

for i, v in pairs(CoreGui.RobloxGui.NotificationFrame:GetDescendants()) do -- Watch how many skids take this XD
    if v:Name == "Notification" then
            v.NotificationTitle.TextColor3 = ScriptColour
        v.NotificationText.TextColor3 = ScriptColour
    end
end

UserInputService.InputBegan:connect(function(Action, NoChat)
    if NoChat then
        return nil
    end
    if Action.KeyCode == Enum.KeyCode[AimlockToggle] then
        Aimlock = not Aimlock
        UserNotifications('Coryu Aimlock', 'Aimlock is now '..tostring(Aimlock),5)
    end
    if Action.KeyCode == Enum.KeyCode[AimlockVelocityUp] then
        AimlockVelocity + 0.1
        UserNotifications('Coryu Aimlock', 'Aimlock Velocity is now '..tonumber(AimlockVelocity),5)
    end
    if Action.KeyCode == Enum.KeyCode[AimlockVelocityDown] then
        AimlockVelocity - 0.1
        UserNotifications('Coryu Aimlock', 'Aimlock Velocity is now '..tonumber(AimlockVelocity),5)
    end
    if Action.KeyCode == Enum.KeyCode[AimlockHeadKey] then
        AimlockPart = AbledParts['Head']
        UserNotifications('Coryu Aimlock', 'Aimlock Part is now Head',5)
    end
    if Action.KeyCode == Enum.KeyCode[AimlockTorsoKey] then
        AimlockPart = AbledParts['Torso']
        UserNotifications('Coryu Aimlock', 'Aimlock Part is now Torso',5)
    end
    if Action.KeyCode == Enum.KeyCode[AimlockHumanoidRootPartKey] then
        AimlockPart = AbledParts['HumanoidRootPart']
        UserNotifications('Coryu Aimlock', 'Aimlock Part is now HumanoidRootPart',5)
    end
end)

RunService.RenderStepped:Connect(function()
    if Aimlock and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(AimlockPart) then
        Client.Character:FindFirstChildOfClass'Tool'.Shoot:FireServer(AimlockTarget.Character:FindFirstChild'HumanoidRootPart'.CFrame + AimlockTarget.Character:FindFirstChild'HumanoidRootPart'.Velocity / AimlockVelocity)
    end
end)
